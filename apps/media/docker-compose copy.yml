version: '3.5'

x-defaults: &defaults
  restart: unless-stopped
  networks:
    - proxy

x-env: &env
  PUID: "99"
  PGID: "100"
  TZ: "Europe/London"

services:
  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr:latest
    <<: *defaults
    environment:
      <<: *env
    ports:
      - 6767:6767
    volumes:
      - "./bazarr:/config"
      - "/mnt/user/video/films:/movies"
      - "/mnt/user/video/tv:/tv"
      - "/mnt/user/video/documentaries:/documentaries"
      - "/mnt/user/appdata/downloads/complete:/downloads"
      - /etc/localtime:/etc/localtime:ro

  gitea:
    image: gitea/gitea:latest
    depends_on:
      - gitea_db
    restart: unless-stopped
    environment:
      USER_UID: "99"
      USER_GID: "100"
      TZ: "Europe/London"
      DB_TYPE: postgres
      DB_HOST: gitea_db
      DB_NAME: "gitea"
      DB_USER: "gitea"
      DB_PASSWD: "NdX86aZujbiHE43vQbx2"
    volumes:
      - "./gitea:/data"
      - "/mnt/user/software/repositories:/repositories"
    networks:
      - proxy
      - default
    ports:
      - "3022:22"
      - "3000:3000"

  gitea_db:
    restart: unless-stopped
    image: postgres:14
    volumes:
      - "./gitea/database/data/:/var/lib/postgresql/data/pgdata:Z"
      - "./gitea/database-backups:/backups"
    environment:
      POSTGRES_USER: "gitea"
      POSTGRES_DB: "gitea"
      POSTGRES_PASSWORD: "NdX86aZujbiHE43vQbx2"
      PGDATA: /var/lib/postgresql/data/pgdata

#  drone:
#    image: drone/drone:latest
#    container_name: drone
#    restart: unless-stopped
#    volumes:
#      - "./gitea/drone:/data"
#    environment:
#      DRONE_GITEA_SERVER: "https://git.andrewjackson.dev"
#      DRONE_GIT_ALWAYS_AUTH: "true"
#      DRONE_GITEA_CLIENT_ID: "e22b06f8-d7b2-4197-bd92-e099d064b559"
#      DRONE_GITEA_CLIENT_SECRET: "UJaFnRbm8HVF2JBxo21GZYOKhrBvQeWn1kPzWamxnw0j"
#      DRONE_SERVER_HOST: "drone.ajackson.dev"
#      DRONE_SERVER_PROTO: "https"
#      DRONE_RPC_SECRET: "d283a323da2a48a8b877cacf18882fb0"
#    networks:
#      - proxy
#      - default
#    ports:
#      - "3001:80"

#  drone-runner-docker:
#    image: drone/drone-runner-docker:1
#    container_name: drone-runner-docker
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    environment:
#      DRONE_RPC_PROTO: "https"
#      DRONE_RPC_HOST: "drone.ajackson.dev"
#      DRONE_RPC_SECRET: "d283a323da2a48a8b877cacf18882fb0"
#      DRONE_RUNNER_CAPACITY: "2"
#      DRONE_RUNNER_NAME: "docker-runner"
#    restart: unless-stopped

  paperless_broker:
    image: redis:6.0
    restart: unless-stopped

  paperless_db:
    image: postgres:14
    restart: unless-stopped
    volumes:
      - "./paperless-ng/database:/var/lib/postgresql/data"
      - "./paperless-ng/database-backups:/backups"
    environment:
      POSTGRES_USER: "paperless"
      POSTGRES_DB: "paperless"
      POSTGRES_PASSWORD: "wFtjc4Mm4yQEf7GUy5bNhJKYmgZQgh"

  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - paperless_db
      - paperless_broker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - "./paperless-ng/data:/usr/src/paperless/data"
      - "/mnt/user/documents/paperless/media:/usr/src/paperless/media"
      - "/mnt/user/documents/paperless/consume:/usr/src/paperless/consume"
    environment:
      PAPERLESS_REDIS: redis://paperless_broker:6379
      PAPERLESS_DBHOST: paperless_db
      PAPERLESS_TIME_ZONE: "Europe/London"
      USERMAP_UID: "99"
      USERMAP_GID: "100"
      PAPERLESS_DBNAME: "paperless"
      PAPERLESS_DBUSER: "paperless"
      PAPERLESS_DBPASS: "wFtjc4Mm4yQEf7GUy5bNhJKYmgZQgh"
      PAPERLESS_FILENAME_FORMAT: "{created_year}/{correspondent}/{title}"
      PAPERLESS_CONSUMER_POLLING: "120"
      PAPERLESS_CONSUMER_RECURSIVE: "true"
      PAPERLESS_CONSUMER_DELETE_DUPLICATES: "true"
      PAPERLESS_URL: "https://paperless.ajackson.dev"
    ports:
      - 8000:8000
    networks:
      - default
      - proxy

  photoprism:
    image: photoprism/photoprism:latest
    depends_on:
      - photoprism_db
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    environment:
      PHOTOPRISM_ADMIN_PASSWORD: "qFQF3PLAqCz8zKGiF4UR"          # PLEASE CHANGE: Your initial admin password (min 4 characters)
      PHOTOPRISM_SITE_URL: "https://photos.ajackson.dev"  # Public server URL incl http:// or https:// and /path, :port is optional
      PHOTOPRISM_ORIGINALS_LIMIT: 5000               # File size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # Improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_DEBUG: "false"                      # Run in debug mode (shows additional log messages)
      PHOTOPRISM_PUBLIC: "false"                     # No authentication required (disables password protection)
      PHOTOPRISM_READONLY: "true"                    # Don't modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # Enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "true"               # Disables storage permission updates on startup
      PHOTOPRISM_DISABLE_WEBDAV: "true"              # Disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # Disables Settings in Web UI
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # Disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false"              # Disables facial recognition
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # Disables image classification
      PHOTOPRISM_DARKTABLE_PRESETS: "false"          # Enables Darktable presets and disables concurrent RAW conversion
      PHOTOPRISM_DETECT_NSFW: "false"                # Flag photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # Allow uploads that MAY be offensive
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # Use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "photoprism_db:3306"     # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism"         # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "qBr6QmCiVFoSLVqLAgNq"       # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_TITLE: "PhotoPrism"
      PHOTOPRISM_SITE_CAPTION: "Browse Your Life"
      PHOTOPRISM_SITE_DESCRIPTION: ""
      PHOTOPRISM_SITE_AUTHOR: ""
      HOME: "/photoprism"
    working_dir: "/photoprism"
    volumes:
      - "/mnt/user/images/photos:/photoprism/originals"
      - "/mnt/user/video/phone:/photoprism/originals/video/phone"
      - "/mnt/user/appdata/photoprism_storage:/photoprism/storage"
    ports:
      - 2342:2342
    networks:
      - proxy
      - default

  photoprism_db:
    restart: unless-stopped
    image: mariadb:10.6
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    command: mysqld --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    volumes:
      - "/opt/apps/photoprism/database:/var/lib/mysql"
      - "/opt/apps/photoprism/database-backups:/var/mariadb/backup"
    environment:
      MYSQL_ROOT_PASSWORD: "z8Ag65tVXAacqi6nPkmS"
      MYSQL_DATABASE: "photoprism"
      MYSQL_USER: "photoprism"
      MYSQL_PASSWORD: "qBr6QmCiVFoSLVqLAgNq"

  nextcloud_db:
    image: postgres:11
    restart: unless-stopped
    volumes:
      - "./nextcloud/database:/var/lib/postgresql/data"
      - "./nextcloud/database-backups:/backups"
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: "nextcloud"
      POSTGRES_DB: "nextcloud"
      POSTGRES_PASSWORD: "WGn3142120257"

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    <<: *defaults
    environment:
      <<: *env
    ports:
      - 7878:7878
    volumes:
      - ./radarr:/config
      - "/mnt/user/video/films:/movies"
      - "/mnt/user/video/documentaries:/documentaries"
      - "/mnt/user/appdata/downloads/complete:/downloads"
      - /etc/localtime:/etc/localtime:ro

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    <<: *defaults
    environment:
      <<: *env
    ports:
      - 8989:8989
    volumes:
      - ./sonarr:/config
      - "/mnt/user/video/tv:/tv"
      - "/mnt/user/video/documentaries:/documentaries"
      - "/mnt/user/appdata/downloads/complete:/downloads"
      - /etc/localtime:/etc/localtime:ro

#  tubearchivist:
#    container_name: tubearchivist
#    restart: unless-stopped
#    image: bbilly1/tubearchivist:latest
#    volumes:
#      - "/mnt/user/video/tube-archivist/:/youtube"
#      - "/mnt/user/appdata/ta-cache/:/cache"
#      - "./tubearchivist/celerybeat-schedule:/cache/celerybeat-schedule"
#    environment:
#      ES_URL: "http://archivist-es:9200"
#      REDIS_HOST: "archivist-redis"
#      HOST_UID: "99"
#      HOST_GID: "100"
#      TA_USERNAME: "andrew"
#      TA_PASSWORD: "Attention-Unfrozen-Galley-Taste4"
#      ELASTIC_PASSWORD: "Quotable5-Narrow-Level-Clubbed"
#      TZ: "Europe/London"
#      TA_HOST: "tube.ajackson.dev"
#    networks:
#      - proxy
#      - default
#    depends_on:
#      - archivist-es
#      - archivist-redis
#    ports:
#      - 8001:8000

#  archivist-redis:
#    image: redis/redis-stack-server
#    container_name: archivist-redis
#    restart: unless-stopped
#    volumes:
#      - "./tubearchivist/redis/:/data"
#    depends_on:
#      - archivist-es

#  archivist-es:
#    image: bbilly1/tubearchivist-es:latest
#    container_name: archivist-es
#    restart: unless-stopped
#    user: "99"
#    environment:
#      - "xpack.security.enabled=true"
#      - "ELASTIC_PASSWORD=Quotable5-Narrow-Level-Clubbed"
#      - "discovery.type=single-node"
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - "path.repo=/usr/share/elasticsearch/data/snapshot"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    volumes:
#      - "./tubearchivist/es:/usr/share/elasticsearch/data"

networks:
  proxy:
    external: true
    name: "proxy"
